import { createElement, FunctionComponent } from 'react'
import { useOvermind } from '../../overmind'
import Apps from '../Apps'
import * as styles from './styles'
import { Tab } from '../../overmind/types'
import Tooltip from '../common/Tooltip'
import { css } from 'emotion'
import {
  FaDatabase,
  FaCogs,
  FaCode,
  FaSave,
  FaTerminal,
  FaHistory,
  FaChrome,
} from 'react-icons/fa'
import { colors } from 'overmind-devtools/src/theme'
import RuntimeConfig from 'overmind-devtools/src/components/RuntimeConfig'

const Tabs: FunctionComponent = () => {
  const { state, actions } = useOvermind()

  function getRuntimeColor() {
    if (!state.runtimeHost) return colors.white
    if (state.runtimeError) return colors.red
    if (state.runtimeLoading) return colors.yellow

    return colors.green
  }

  return (
    <div className={styles.wrapper}>
      <Apps />
      <div className={styles.divider} />
      <div className={styles.runtimeWrapper}>
        <button
          className={css(
            styles.button,
            Boolean(state.runtimeHost) && styles.activeButton
          )}
          onClick={() => actions.toggleRuntimeConfig()}
        >
          <FaChrome
            style={{
              color: getRuntimeColor(),
            }}
          />
        </button>
        {state.isShowingRuntimeConfig ? <RuntimeConfig /> : null}
      </div>
      <div className={styles.divider} />
      <button
        className={css(
          styles.button,
          state.currentTab === Tab.State && styles.activeButton
        )}
        onClick={() => actions.changeTab(Tab.State)}
      >
        <FaDatabase />
      </button>
      <Tooltip text="Actions">
        <button
          className={css(
            styles.button,
            state.currentTab === Tab.Actions && styles.activeButton
          )}
          onClick={() => actions.changeTab(Tab.Actions)}
        >
          <FaCogs />
        </button>
      </Tooltip>
      <Tooltip text="Components">
        <button
          className={css(
            styles.button,
            state.currentTab === Tab.Components && styles.activeButton
          )}
          onClick={() => actions.changeTab(Tab.Components)}
        >
          <FaCode />
        </button>
      </Tooltip>
      <Tooltip text="History">
        <button
          className={css(
            styles.button,
            state.currentTab === Tab.History && styles.activeButton
          )}
          onClick={() => actions.changeTab(Tab.History)}
        >
          <FaHistory />
        </button>
      </Tooltip>
      <Tooltip text="Flushes">
        <button
          className={css(
            styles.button,
            state.currentTab === Tab.Flushes && styles.activeButton
          )}
          onClick={() => actions.changeTab(Tab.Flushes)}
        >
          <FaSave />
        </button>
      </Tooltip>
      <Tooltip text="Console">
        <button
          className={css(
            styles.button,
            state.currentTab === Tab.Console && styles.activeButton
          )}
          onClick={() => actions.changeTab(Tab.Console)}
        >
          <FaTerminal />
        </button>
      </Tooltip>
    </div>
  )
}

export default Tabs
