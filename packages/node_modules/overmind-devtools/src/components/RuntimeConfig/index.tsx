import { createElement, FunctionComponent, Fragment, useState } from 'react'
import { useOvermind } from 'overmind-devtools/src/overmind'
import * as styles from './styles'
import { colors } from 'overmind-devtools/src/theme'

const RuntimeConfig: FunctionComponent = () => {
  const { state, actions } = useOvermind()
  const currentHost = state.runtimeHost.split('?')[0]
  const [host, setHost] = useState(currentHost)

  return (
    <div className={styles.wrapper}>
      <div
        className={styles.overlay}
        onClick={() => actions.toggleRuntimeConfig()}
      />
      <form
        className={styles.contentWrapper}
        onSubmit={(event) => {
          event.preventDefault()
          host === currentHost
            ? actions.disconnectRuntime()
            : actions.setRuntimeHost(host)
        }}
      >
        <input
          autoFocus
          value={host}
          onChange={(event) => setHost(event.currentTarget.value)}
          className={styles.input}
        />
        <button
          type="submit"
          className={styles.button}
          disabled={!host.length}
          style={{
            color: host && host === currentHost ? colors.white : colors.dark,
            backgroundColor: host
              ? host === currentHost
                ? colors.red
                : colors.green
              : colors.gray,
          }}
        >
          {host && host === currentHost ? 'disconnect' : 'connect'}
        </button>
      </form>
    </div>
  )
}

export default RuntimeConfig
